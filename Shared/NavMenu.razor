@using MiniFigures.Data
@using MiniFigures.Models

@inject IMiniFigureService MiniFigureService
@inject ISeriesService SeriesService
@inject NavigationManager NavigationManager

<div class="top-row pl-4 navbar navbar-dark" style="margin-bottom: 1rem;margin-top:1rem">
    <a href="" @onclick="@Home" style="font-size:2rem;color:black;text-decoration:none">MiniFigures</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li>
            Order By:
            <div class="dropdown">
                <button class="btn btn-light" style="width:120px">@orderByString</button>
                <div class="dropdown-content">
                    <div class="btn-group-vertical">
                        <input class="btn btn-outline-secondary" type="button" value="A-Z" style="width:120px" @onclick="() => OrderBy(1)" />
                        <input class="btn btn-outline-secondary" type="button" value="Z-A" style="width:120px" @onclick="() => OrderBy(2)">
                        <input class="btn btn-outline-secondary" type="button" value="Release date" style="width:120px" @onclick="() => OrderBy(3)">
                    </div>
                </div>
            </div>
        </li>
        @foreach (var serie in series)
        {
            <li class="nav-item px-3" style="padding-top: 0; background-image:url(images/@serie.Name/@serie.SeriePicture)">
                <NavLink class="nav-link" href="@serie.Name">
                    <span class="fas fa-list mr-2" aria-hidden="true"></span>@serie.DisplayName
                </NavLink>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="/addnew/serie">
                <span class="fas fa-plus-circle mr-2" aria-hidden="true"></span>Add new serie
            </NavLink>
        </li>
    </ul>
</div>


@code {
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    public static List<Series> series = new List<Series>();

    private bool collapseNavMenu = true;

    public static int orderBy { get; set; } = 1;

    private string orderByString { get; set; } = "A-Z";
    private string serieToShow;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    protected override async Task OnInitializedAsync()
    {
        await GetList();
    }
    protected async Task<List<Series>> GetList()
    {
        series = await SeriesService.GetSeries(orderBy);
        return series;
    }
    public async Task OrderBy(int order)
    {
        switch (order)
        {
            case 1:
                orderByString = "A-Z";
                orderBy = 1;
                break;
            case 2:
                orderByString = "Z-A";
                orderBy = 2;
                break;
            case 3:
                orderByString = "Release date";
                orderBy = 3;
                break;
            default:
                break;
        }
        await GetList();
    }
    void Home()
    {
        NavigationManager.NavigateTo("/", true);
    }
}
