@using MiniFigures.Data
@using MiniFigures.Models
@inject IMiniFigureService MiniFigureService
@inject ISeriesService SeriesService

@inject NavigationManager NavigationManager


<div class="top-row pl-4 navbar navbar-dark" style="margin-bottom: 1rem;margin-top:1rem">
    <a href="" style="font-size:2rem;color:black;text-decoration:none" >MiniFigures</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        @foreach (var serie in series)
        {
            <li class="nav-item px-3" style="padding-top: 0; background-image:url(images/@serie.Name/@serie.SeriePicture)">
                <NavLink class="nav-link" href="@serie.Name" >
                    <span class="fas fa-list mr-2" aria-hidden="true"></span>@serie.DisplayName
                </NavLink>
            </li>
        }
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="/addnew/serie">
                <span class="fas fa-plus-circle mr-2" aria-hidden="true"></span>Add new serie
            </NavLink>
        </li>
    </ul>
</div>


@code {
    private bool collapseNavMenu = true;
    private string serieToShow;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    public static List<Series> series = new List<Series>();

    protected override async Task OnInitializedAsync()
    {
        await GetList();
    }
    protected async Task<List<Series>> GetList()
    {
        series = await SeriesService.GetSeries();
        return series;
    }
}
