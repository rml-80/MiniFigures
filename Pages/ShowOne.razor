@page "/{serieToShow}/{number:int}"
@using MiniFigures.Data
@using MiniFigures.Models
@inject NavigationManager NavigationManager
@inject IMiniFigureService Mini
@inject ISeriesService SeriesService

<div style="text-align:center">
    <div class="card-body" style="margin: auto; background-color: @Color; max-width: 430px; height: 680px; padding: 20px;  border-radius: 20px">
        <div class="card-body" style="background-color:white; width: 100%; height: 100%; border-radius: 10px; padding-top:5px">
            <div style="margin-bottom:5px;font-size:1.5rem;text-align:left;color:@Color">@serieToShow</div>
            <img src="@figure.ImgURL" style="max-width:100%" alt="Picture of @figure.Name" />
            @if (edit)
            {
                <input for="Name" class="form-control" @bind="@figure.Name" style="font-size: 1.5rem; text-align: center; height: 2rem" />
                <table style="font-size:1rem">
                    <tr>
                        <td style="text-align:right">Number:</td>
                        <td style="text-align:center"><input for="Number" class="form-control" @bind="@figure.Number" style="width:80px; font-size:1rem; margin:auto;text-align:center;height: 2rem" /></td>
                    </tr>
                    <tr>
                        <td style="text-align:right;height: 2rem">In display:</td>
                        <td>True | False</td>
                    </tr>
                    <tr>
                        <td style="text-align:right;width:40%;height: 2rem">Ownd openend:</td>
                        <td><a class="fas fa-plus-square" @onclick="IncrementOpen" style="color:@Color"></a> @figure.CountOpened <a class="fas fa-minus-square" @onclick="DecrementOpen" style="color:@Color"></a></td>
                    </tr>
                    <tr>
                        <td style="text-align:right;height: 2rem">Ownd sealed:</td>
                        <td><a class="fas fa-plus-square" @onclick="IncrementSealed" style="color:@Color"></a> @figure.CountSealed <a class="fas fa-minus-square" @onclick="DecrementSealed" style="color:@Color"></a></td>
                    </tr>
                    <tr>
                        <td style="text-align:right;height: 2rem">Image:</td>
                        <td> <input for="Name" class="form-control" @bind="@figure.ImgURL" style="font-size:1rem" /></td>
                    </tr>
                </table>
                <table style="width:100%">
                    <tr>
                        <td style="width:33%">
                            <a style="color:white; background-color:@Color; padding: 4px; border-radius: 3px ; font-size:0.7rem; font-weight:bold" @onclick="resetfigure">Reset MiniFigure</a>
                        </td>
                        <td style="width:33%">
                            <a class="fas fa-window-close fa-2x" style="color:@Color" @onclick="cancel"></a>
                        </td>
                        <td style="width:33%">
                            <a class="fas fa-save fa-2x" style="color:@Color" @onclick="() => Save(figure.Number)"></a>
                        </td>
                    </tr>
                </table>
            }
            else
            {
                <p style="font-size: 1.5rem;text-align: center;height:2rem; margin:0px">@figure.Name</p>
                <table style="font-size:1rem">
                    <tr>
                        <td style="text-align:right;height: 2rem">Number:</td>
                        <td style="text-align:center"><p style="width:80px; font-size:1rem; margin:auto;text-align:center;height: 2rem">@figure.Number</p></td>
                    </tr>
                    <tr>
                        <td style="text-align:right;height: 2rem">In display:</td>
                        <td style="width:40%"><i class=@changeIcon(figure.Displayed) style=@iconColor></i></td>

                    </tr>
                    <tr>
                        <td style="text-align:right;width:40%;height: 2rem">Ownd openend:</td>
                        <td>@figure.CountOpened</td>
                    </tr>
                    <tr>
                        <td style="text-align:right;height: 2rem">Ownd sealed:</td>
                        <td>@figure.CountSealed</td>
                    </tr>
                    <tr>
                        <td style="text-align:right;height: 2rem">Image:</td>
                        <td style="font-size:1rem; white-space:nowrap">@figure.ImgURL</td>
                    </tr>
                </table>
                <div style="text-align:right;color:@Color"><a class="fas fa-edit fa-2x" @onclick="editfigure"></a></div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int number { get; set; }
    [Parameter]
    public string serieToShow { get; set; }
    protected MiniFigure Singlefigure = new MiniFigure();
    public string displayButton { get; set; }
    public Series series { get; set; }
    public string Color { get; set; }
    private bool edit = false;
    protected MiniFigure figure = new MiniFigure();
    public string Icon { get; set; }
    public string iconColor { get; set; }

    protected override async Task OnInitializedAsync()
    {
        figure = await Mini.GetOneMiniFigure(serieToShow, number);
        series = await SeriesService.GetOneSerie(serieToShow);
        Color = series.SeriesColor;
    }
    private async Task editName(int number)
    {
        await Mini.EditFigure(figure.ID, figure, serieToShow);
    }
    private void IncrementOpen()
    {
        figure.CountOpened++;
    }
    private void DecrementOpen()
    {
        if (figure.CountOpened != 0)
        {
            figure.CountOpened--;
        }
    }
    private void IncrementSealed()
    {
        figure.CountSealed++;
    }
    private void DecrementSealed()
    {
        if (figure.CountSealed != 0)
        {
            figure.CountSealed--;
        }
    }
    private void checkDisplayed()
    {
        if (figure.Displayed)
        {
            displayButton = "false";
        }
        else
        {
            displayButton = "true";
        }
    }
    private void changeDisplayed()
    {
        if (figure.Displayed)
        {
            figure.Displayed = false;
            displayButton = "true";
        }
        else
        {
            figure.Displayed = true;
            displayButton = "false";
        }
    }
    private void resetfigure()
    {
        figure.Displayed = false;
        figure.CountOpened = 0;
        figure.CountSealed = 0;
    }
    private async Task Save(int number)
    {
        await editName(number);
        edit = false;
    }
    private void editfigure()
    {
        edit = true;
    }
    protected void cancel()
    {
        edit = false;
    }
    private string changeIcon(bool test)
    {
        if (test)
        {
            Icon = "fas fa-check fa-2x";
            iconColor = "color:green";
        }
        else
        {
            Icon = "fas fa-times fa-2x";
            iconColor = "color:red";
        }
        return Icon;
    }

}
