@page "/{serieToShow}/{number:int}"
@using MiniFigures.Data
@using MiniFigures.Models
@inject NavigationManager NavigationManager
@inject IMiniFigureService MiniFigureService
@inject ISeriesService SeriesService

<link rel="stylesheet" href="css/ShowOne.css" />
@if (series == null)
{
    <h2>Loading......</h2>
}
else
{
    <div>

        <i class="fas fa-times fa-2x closeBtn" @onclick="close" />
        <table>
            <tr>
                <td class="txtRight" style="color:@series.SeriesColor">
                    @if (OneMF.Number > 1)
                    {
                        <a class="fas fa-chevron-left fa-5x" @onclick="() => goTo(OneMF.Number - 1)" />
                    }
                    else
                    {
                        <a class="fas fa-chevron-left fa-5x" style="opacity:0.3" />
                    }
                </td>
                <td>
                    <div class="card" style="border-color:@series.SeriesColor">
                        @if (!edit)
                        {
                            <ShowOne OneMF="@OneMF" series="series" />
                        }
                        else
                        {
                            <EditOne OneFigure="@OneMF" serie="@series" />
                        }
                    </div>
                </td>
                <td class="txtLeft" style="color: @series.SeriesColor">
                    @if (OneMF.Number != ListOfMF.Count)
                    {
                        <a class="fas fa-chevron-right fa-5x" @onclick="() => goTo(OneMF.Number + 1)" />
                    }
                    else
                    {
                        <a class="fas fa-chevron-right fa-5x" style="opacity:0.3" />
                    }
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <input type="button" class="btn btn-outline-warning editBtn" value="Edit" style="color:@series.SeriesColor" @onclick="editfigure" />
                </td>
                <td></td>
            </tr>
        </table>
    </div>
}
@code {
    [Parameter]
    public int number { get; set; }
    [Parameter]
    public string serieToShow { get; set; }

    protected Series series { get; set; }
    protected MiniFigure OneMF = new MiniFigure();

    List<MiniFigure> ListOfMF = new List<MiniFigure>();

    public bool edit { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        series = await SeriesService.GetOneSerie(serieToShow);
        ListOfMF = MiniFigureService.GetMiniFigures(serieToShow);
    }
    protected override async Task OnParametersSetAsync()
    {
        OneMF = await MiniFigureService.GetOneMiniFigure(serieToShow, number);
    }
    public void editfigure()
    {
        if (edit)
        {
            edit = false;
        }
        else
        {
            edit = true;
        }
    }
    void goTo(int i)
    {
        NavigationManager.NavigateTo($"/{serieToShow}/{i}");
        this.StateHasChanged();
    }
    void close()
    {
        NavigationManager.NavigateTo($"/{serieToShow}");
    }
}