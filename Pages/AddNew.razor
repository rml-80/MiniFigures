@page "/addnew"

@using MiniFigures.Data
@using MiniFigures.Models
@inject IMiniFigureService MiniFigureService
@inject ISeriesService SeriesService
@inject NavigationManager NavigationManager




    <h3>Add Serie</h3>
    <div>

        <div>
            <label for="Number">Number: </label>
            <input form="Number" @bind="@series.Number" />
        </div>
        <div>
            <label for="Name">Name: </label>
            <input form="Name" @bind="@series.Name" />
        </div>
        <div>
            <label for="NumberOfFiguers">Number of figures: </label>
            <input form="NumberOfFigures" @bind="@series.NumberOfFigures" />
        </div>
        <div>
            <label for="SeriesColor">Color code: </label>
            <input form="SeriesColor" @bind="@series.SeriesColor" />
        </div>
        <div><input type="button" @onclick="@AddSerie" value="Save" /></div>

    </div>
<h3>AddMiniFigure</h3>
    <div>
        <div>
            <label for="collectionName">In witch serie: </label>
            <input form="collectionName" @bind="@collectionName" />
        </div>
        <div>
            <label for="Number">Number: </label>
            <input form="Number" @bind="@miniFigure.Number" />
        </div>
        <div>
            <label for="Name">Name: </label>
            <input form="Name" @bind="@miniFigure.Name" />
        </div>
        <div>
            <label for="ImgURL">URL to image: </label>
            <input form="ImgURL" @bind="@miniFigure.ImgURL" />
        </div>
        <div><input type="button" @onclick="@AddSerie" value="Save" /></div>

    </div>
    @code {
        MiniFigure miniFigure = new MiniFigure();
        Series series = new Series();
        string collectionName;
        protected async Task AddNewFigure()
        {
            miniFigure.CountOpened = 0;
            miniFigure.CountSealed = 0;
            miniFigure.Displayed = false;

            await MiniFigureService.AddFigure(miniFigure, collectionName);
            NavigationManager.NavigateTo("/{serieToShow}");
        }
        protected async Task AddSerie()
        {
            await SeriesService.AddSerie(series);
            NavigationManager.NavigateTo("/",true);
            
        }
    }
