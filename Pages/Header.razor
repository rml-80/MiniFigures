@using MiniFigures.Models
@using MiniFigures.Data
@inject IMiniFigureService Mini
@inject ISeriesService SeriesService

@inject NavigationManager NavigationManager

<link href="/css/Header.css" rel="stylesheet" />

<style>
    .btn.btn-outline-info{
        color:@serie.SeriesColor;
        border-color:@serie.SeriesColor;
        box-shadow:none !important;
        outline:none !important;
    }
        .btn.btn-outline-info:active:hover,
        .btn.btn-outline-info:hover {
            background-color: @serie.SeriesColor;
            color: white;
            border-color: @serie.SeriesColor;
            box-shadow: none !important;
            outline: none !important;
        }
</style>
<div class="headerCenter" style="background-color:@serie.SeriesColor">
    <h2>
        @serie.DisplayName
        <a @onclick="() => ToggleInfo()" class="@InfoIcon SerieInfobutton"></a>
    </h2>
</div>
<div class="infoBlock" style="display:@HideShow;border-color:@serie.SeriesColor">
    <table class="biggerText">
        <tr>
            <td class="infoRow">Number:</td>
            <td class="infoRow txtCenter">@serie.Number</td>
            <td class="txtRight"><input class="btn btn-outline-info" type="button" @onclick="ToEdit" value="Edit" /></td>
        </tr>
        <tr>
            <td class="infoRow">Number of figures:</td>
            <td class="infoRow txtCenter">@serie.NumberOfFigures</td>
            <td class="txtRight">
                @if (amountOfFigures != serie.NumberOfFigures)
                {
                    <p>@amountOfFigures of @serie.NumberOfFigures are added to the serie <input class="btn btn-outline-info" type="button" @onclick="ToAdd" value="Add figure" /></p>
                }
            </td>
        </tr>
        <tr>
            <td class="infoRow">Series color:</td>
            <td class="infoRow txtCenter">@serie.SeriesColor</td>
            <td></td>
        </tr>
    </table>
</div>
@if (showEdit)
{
    <div class="modal fade show" style="display:block;background-color: rgba(255,255,255,.8);" aria-modal="true" role="dialog">
        <i class="fas fa-times fa-2x closeBtn" @onclick="close" />
        <div class="modal-dialog" @onclick:stopPropagation="true" style="width:37rem">
            <div class="modal-content" style="background-color:transparent; border:none">
                <EditSerie serieToShow="@serie.Name" />
            </div>
        </div>
    </div>
}
@if (showAdd)
{
    <div class="modal fade show" style="display:block;background-color: rgba(255,255,255,.8);" aria-modal="true" role="dialog">
        <i class="fas fa-times fa-2x closeBtn" @onclick="close" />
        <div class="modal-dialog" @onclick:stopPropagation="true" style="width:37rem">
            <div class="modal-content" style="background-color:transparent; border:none">
                <AddNewFigures serie="@serie.Name" />
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Series serie { get; set; }
    [Parameter]
    public int amountOfFigures { get; set; }

    public string HideShow { get; set; } = "none";
    public string InfoIcon { get; set; } = "fas fa-chevron-down";

    bool showAdd { get; set; }
    bool showEdit { get; set; }

    void ToEdit()
    {
        showEdit = true;
        //NavigationManager.NavigateTo($"/{serie.Name}/edit");
    }
    void ToAdd()
    {
        showAdd = true;
        //NavigationManager.NavigateTo($"/addnew/figures/{serie.Name}");
    }
    void close()
    {
        showAdd = false;
        showEdit = false;
    }
    void ToggleInfo()
    {
        if (HideShow == "none")
        {
            HideShow = "block";
            InfoIcon = "fas fa-chevron-up";
        }
        else
        {
            HideShow = "none";
            InfoIcon = "fas fa-chevron-down";
        }
    }
}
