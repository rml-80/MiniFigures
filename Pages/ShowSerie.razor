@page "/{serieToShow}"
@using MiniFigures.Models
@using MiniFigures.Data
@inject IMiniFigureService MiniFigureService
@inject ISeriesService SeriesService
@inject NavigationManager NavigationManager

<link rel="stylesheet" href="css/ShowSerie.css" />

@if (ListOfMF == null)
{
    <h2>Loading.......</h2>
}
else if (ListOfMF.Count == 0)
{
    <Header serie="series" amountOfFigures="ListOfMF.Count" />
    <div class="headerCenter">
        <h4 class="marginBig">No Figures in collection</h4>
        <input type="button" value="Add Figure" @onclick="ToAdd" /> <input type="button" value="Edit serie" @onclick="ToEdit" />
    </div>
}
else
{
    <Header serie="series" amountOfFigures="ListOfMF.Count" />
    <h4>
        You own @owned of @series.NumberOfFigures
        @if (owned == series.NumberOfFigures)
        {
            <i class="fas fa-star" style="color:@series.SeriesColor" />
        }
    </h4>
    <div class="card-deck">
        @foreach (var figure in ListOfMF)
        {
            <div class="Card" style="border-color:@series.SeriesColor">
                <div style="height:22rem" @onclick="(() => ShowOne(figure.Number))">
                    <div class="txtLeftBold" style="color:@series.SeriesColor">@figure.Number</div>
                    <img src="/images/@serieToShow/@figure.Image" alt="Picture of @figure.Name"  />
                    <table>
                        <tr>
                            <td colspan="2">
                                <h5>@figure.Name</h5>
                            </td>
                        </tr>
                        <tr>
                            <td class="label">In display:</td>
                            <td>
                                @if (!figure.Displayed)
                                {
                                    <i class="fas fa-times" style="color:red" />
                                }
                                else
                                {
                                    <i class="fas fa-check" style="color:green" />
                                }
                            </td>
                        </tr>
                        <tr>
                            <td class="label">Ownd openend:</td>
                            <td>@figure.CountOpened</td>
                        </tr>
                        <tr>
                            <td class="label">Ownd sealed:</td>
                            <td>@figure.CountSealed</td>
                        </tr>
                    </table>
                </div>
                <a class="fas fa-plus-circle fa-2x infoBtn" style="color:@series.SeriesColor" @onclick="(() => IncrementListOfMF(figure.Number))" />
            </div>
        }
    </div>
}
@code {
    [Parameter]
    public string serieToShow { get; set; }

    List<MiniFigure> ListOfMF;

    protected MiniFigure OneMF = new MiniFigure();

    protected Series series { get; set; }

    protected int owned { get; set; }
    //protected string OnDisplayIcon { get; set; }
    //protected string OnDisplayIconColor { get; set; }

    protected override async Task OnInitializedAsync()
    {
        series = await SeriesService.GetOneSerie(serieToShow);
    }
    protected override async Task OnParametersSetAsync()
    {
        SendCollectionName(serieToShow);
        series = await SeriesService.GetOneSerie(serieToShow);
        Owned();
    }
    private void SendCollectionName(string collectionName)
    {
        ListOfMF = MiniFigureService.GetMiniFigures(collectionName);
    }
    private void ShowOne(int number)
    {
        NavigationManager.NavigateTo($"/{serieToShow}/{number}");
    }
    private async Task IncrementListOfMF(int number)
    {
        OneMF = await MiniFigureService.GetOneMiniFigure(serieToShow, number);
        if (OneMF.CountSealed == 0 && OneMF.CountOpened == 0 || OneMF.Displayed == true)
        {
            OneMF.CountSealed++;
            owned++;
        }
        else if (OneMF.CountSealed == 1 && OneMF.CountOpened == 0)
        {
            OneMF.CountSealed = 0;
            OneMF.CountOpened++;
        }
        else if (OneMF.CountOpened == 1)
        {
            OneMF.Displayed = true;
        }
        await MiniFigureService.EditFigure(OneMF.ID, OneMF, serieToShow);
        SendCollectionName(serieToShow);
    }
    private void Owned()
    {
        owned = 0;
        foreach (var figure in ListOfMF)
        {
            if (figure.CountSealed > 0 || figure.CountOpened > 0)
            {
                owned++;
            }
        }
    }
    //private string changeTrueFalseIcon(bool test)
    //{
    //    if (test)
    //    {
    //        OnDisplayIcon = "fas fa-check";
    //        OnDisplayIconColor = "color:green";
    //    }
    //    else
    //    {
    //        OnDisplayIcon = "fas fa-times";
    //        OnDisplayIconColor = "color:red";
    //    }
    //    return OnDisplayIcon;
    //}
    private void ToEdit()
    {
        NavigationManager.NavigateTo($"/{serieToShow}/edit");
    }
    private void ToAdd()
    {
        NavigationManager.NavigateTo($"/addnew/figures/{serieToShow}");
    }
}
